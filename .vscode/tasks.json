{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Setup: Install Dependencies",
      "type": "shell",
      "command": "uv sync",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Quality: Ruff Check",
      "type": "shell",
      "command": "uv run ruff check .",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "ruff",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": {
          "regexp": "^(.+?):(\\d+):(\\d+):\\s+(\\w+):\\s+(.+)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "Quality: Ruff Fix",
      "type": "shell",
      "command": "uv run ruff check . --fix",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Format: Ruff Format",
      "type": "shell",
      "command": "uv run ruff format .",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Quality: MyPy",
      "type": "shell",
      "command": "uv run mypy src/",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "mypy",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": {
          "regexp": "^(.+?):(\\d+):(\\d+):\\s+(error|warning|note):\\s+(.+)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "Test: Pytest",
      "type": "shell",
      "command": "uv run pytest -v",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "pytest",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": {
          "regexp": "^(.+?):(\\d+).*FAILED.*$",
          "file": 1,
          "line": 2
        }
      }
    },
    {
      "label": "Test: Pytest with Coverage",
      "type": "shell",
      "command": "uv run pytest --cov=src --cov-report=html --cov-report=term-missing",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Run: Package",
      "type": "shell",
      "command": "PYTHONPATH=src uv run python -m mypackage",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Run: Package (Debug)",
      "type": "shell",
      "command": "PYTHONPATH=src PYTHONPATH=src uv run python -m pdb -m mypackage",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared"
      }
    },
    {
      "label": "Quality: All Checks",
      "type": "shell",
      "command": "uv run ruff check . && uv run ruff format . && uv run mypy src/ && uv run pytest -q --maxfail=1 --disable-warnings",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "dependsOrder": "sequence",
      "problemMatcher": ["$python"]
    },
    {
      "label": "Clean: Cache",
      "type": "shell",
      "command": "find . -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null; rm -rf .mypy_cache .pytest_cache .ruff_cache htmlcov/ .coverage 2>/dev/null || true",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      }
    }
  ]
}
